---
# tasks file for traefik

- name: Create traefik group
  group:
    name: "{{ traefik_group }}"
    state: present

- name: Create traefik user
  user:
    name: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    home: /var/www
    create_home: false
    shell: /usr/sbin/nologin
    system: true
    state: present

- name: Download and unpack Traefik assets
  unarchive:
    src: "{{ traefik_download_url }}"
    dest: "{{ traefik_binary_dir }}"
    remote_src: true
    exclude:
      - CHANGELOG.md
      - LICENSE.md

- name: Correct Traefik binary permissions
  file:
    path: "{{ traefik_binary }}"
    owner: root
    group: root
    mode: '0755'

- name: Create Traefik config directories
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    state: directory
  with_items:
    - path: "{{ traefik_config_dir }}"
      owner: root
      group: root
    - path: "{{ traefik_acme_dir }}"
      owner: "{{ traefik_user }}"
      group: "{{ traefik_group }}"

- name: Create Traefik config directory
  file:
    path: "{{ traefik_config_dir }}"
    state: directory

- name: Create Traefik logging directory
  file:
    path: "{{ traefik_log_dir }}"
    owner: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    state: directory

- name: Configure Traefik configurations
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - src: traefik.yaml.j2
      dest: "{{ traefik_config }}"
    - src: dynamic.yaml.j2
      dest: "{{ traefik_config_dynamic }}"
  notify: restart traefik

- name: Make sure acme.json file exists
  file:
    path: "{{ traefik_acme_file }}"
    owner: "{{ traefik_user }}"
    group: "{{ traefik_group }}"
    mode: '0600'
    state: touch
  changed_when: false

- name: Configure Traefik service
  template:
    src: traefik.service.j2
    dest: "/etc/systemd/system/traefik.service"
    owner: root
    group: root
    mode: '644'
  notify: restart traefik
  register: status_traefik_systemd

- name: Reload systemd daemon
  systemd:
    daemon_reload: true
  changed_when: true
  when: status_traefik_systemd.changed

- name: Allow Traefik to bind privileged ports
  capabilities:
    path: "{{ traefik_binary }}"
    capability: cap_net_bind_service=+ep
    state: present
  changed_when: false

- name: Start and enable Traefik service
  service:
    name: traefik
    state: started
    enabled: true
